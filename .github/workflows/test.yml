# Copyright (C) 2022-2024 The cargo-http-registry Developers
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on:
  pull_request:
  push:
    branches:
      - '**'
      - '!dependabot/**'
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Build without debug information enabled to decrease compilation time
  # and binary sizes in CI. This option is assumed to only have marginal
  # effects on the generated code, likely only in terms of section
  # arrangement. See
  # https://doc.rust-lang.org/cargo/reference/environment-variables.html
  # https://doc.rust-lang.org/rustc/codegen-options/index.html#debuginfo
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  test:
    name: Build and test [${{ matrix.runs-on }}, ${{ matrix.rust }}, ${{ matrix.profile }}]
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
        rust: [stable]
        profile: [dev, release]
        include:
        - runs-on: macos-latest
          rust: stable
          profile: dev
        - runs-on: windows-latest
          rust: stable
          profile: dev
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Build & test ${{ matrix.profile }}
      run: |
        git config --global user.name = "deso"
        git config --global user.email = "deso@posteo.net"
        cargo build --profile=${{ matrix.profile }} --all-targets
        cargo test --profile=${{ matrix.profile }}
  build-minimum:
    name: Build using minimum versions of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nightly Rust
        uses: dtolnay/rust-toolchain@nightly
      - run: cargo +nightly -Z minimal-versions update
      - name: Install minimum Rust
        uses: dtolnay/rust-toolchain@master
        with:
          # Please adjust README and rust-version field in Cargo.toml files when
          # bumping version.
          toolchain: 1.63.0
      - name: Build
        run: cargo build --locked
  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo clippy --no-deps --all-targets -- -A unknown_lints -A deprecated -D warnings
